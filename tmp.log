[step1] Generating vythonAST: 0.9922 seconds
Tree(Token('RULE', 'file_input'), [Tree(Token('RULE', 'classdef'), [Tree(Token('RULE', 'name'), [Token('NAME', 'A')]), Tree(Token('RULE', 'version'), [Token('__ANON_25', '1')]), None, Tree(Token('RULE', 'suite'), [Tree(Token('RULE', 'funcdef'), [Tree(Token('RULE', 'name'), [Token('NAME', '__init__')]), Tree(Token('RULE', 'parameters'), [Tree(Token('RULE', 'name'), [Token('NAME', 'self')]), Tree(Token('RULE', 'name'), [Token('NAME', 'value')]), None, None]), None, Tree(Token('RULE', 'suite'), [Tree(Token('RULE', 'assign_stmt'), [Tree(Token('RULE', 'assign'), [Tree('getattr', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'self')])]), Tree(Token('RULE', 'name'), [Token('NAME', 'value')])]), Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'value')])])])])])])])]), Tree(Token('RULE', 'classdef'), [Tree(Token('RULE', 'name'), [Token('NAME', 'A')]), Tree(Token('RULE', 'version'), [Token('__ANON_25', '2')]), None, Tree(Token('RULE', 'suite'), [Tree(Token('RULE', 'funcdef'), [Tree(Token('RULE', 'name'), [Token('NAME', '__init__')]), Tree(Token('RULE', 'parameters'), [Tree(Token('RULE', 'name'), [Token('NAME', 'self')]), Tree(Token('RULE', 'name'), [Token('NAME', 'value')]), None, None]), None, Tree(Token('RULE', 'suite'), [Tree(Token('RULE', 'assign_stmt'), [Tree(Token('RULE', 'assign'), [Tree('getattr', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'self')])]), Tree(Token('RULE', 'name'), [Token('NAME', 'value')])]), Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'value')])])])])])])])]), Tree(Token('RULE', 'assign_stmt'), [Tree(Token('RULE', 'assign'), [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'a1')])]), Tree('funccallwithversion', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'A')])]), Tree(Token('RULE', 'version'), [Token('__ANON_25', '1')]), Tree(Token('RULE', 'arguments'), [Tree(Token('RULE', 'number'), [Token('DEC_NUMBER', '1')])])])])]), Tree(Token('RULE', 'assign_stmt'), [Tree(Token('RULE', 'assign'), [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'a2')])]), Tree('funccallwithversion', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'A')])]), Tree(Token('RULE', 'version'), [Token('__ANON_25', '2')]), Tree(Token('RULE', 'arguments'), [Tree(Token('RULE', 'number'), [Token('DEC_NUMBER', '3')])])])])]), Tree(Token('RULE', 'expr_stmt'), [Tree('funccall', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'print')])]), Tree(Token('RULE', 'arguments'), [Tree(Token('RULE', 'string'), [Token('STRING', '"hi"')])])])]), Tree(Token('RULE', 'expr_stmt'), [Tree('funccall', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'print')])]), Tree(Token('RULE', 'arguments'), [Tree(Token('RULE', 'arith_expr'), [Tree('getattr', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'a1')])]), Tree(Token('RULE', 'name'), [Token('NAME', 'value')])]), Token('PLUS', '+'), Tree('getattr', [Tree('var', [Tree(Token('RULE', 'name'), [Token('NAME', 'a2')])]), Tree(Token('RULE', 'name'), [Token('NAME', 'value')])])])])])])])

[step2] Transpiling vythonAST to PythonAST: 0.0076 seconds

[step3] Unparsing PythonAST: 0.0076 seconds

[step4] Execute Python Program: 0.0060 seconds

[Python AST]: 
Module(
    [
        Module(
            [
                Import(
                    [
                        alias('re')]),
                FunctionDef(
                    're_match',
                    arguments(
                        [],
                        [
                            arg('self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        Assign(
                            [
                                Name('cn', Store())],
                            Attribute(
                                Attribute(
                                    Name('self', Load()),
                                    '__class__',
                                    Load()),
                                '__name__',
                                Load())),
                        Assign(
                            [
                                Name('pattern', Store())],
                            Constant('([A-Za-z_0-9]+)_v_([0-9]+)')),
                        Assign(
                            [
                                Name('matchRe', Store())],
                            Call(
                                Attribute(
                                    Name('re', Load()),
                                    'fullmatch',
                                    Load()),
                                [
                                    Name('pattern', Load()),
                                    Name('cn', Load())],
                                [])),
                        If(
                            Name('matchRe', Load()),
                            [
                                Assign(
                                    [
                                        Name('class_name', Store())],
                                    Subscript(
                                        Name('matchRe', Load()),
                                        Constant(1),
                                        Load())),
                                Assign(
                                    [
                                        Name('version_number', Store())],
                                    Subscript(
                                        Name('matchRe', Load()),
                                        Constant(2),
                                        Load())),
                                Return(
                                    Tuple(
                                        [
                                            Name('class_name', Load()),
                                            Name('version_number', Load())],
                                        Load()))],
                            [
                                Raise(
                                    Call(
                                        Name('TypeError', Load()),
                                        [
                                            Constant('Inappropriate Class Name')],
                                        []))])],
                    [],
                    type_params=[]),
                FunctionDef(
                    '__vt_init__',
                    arguments(
                        [],
                        [
                            arg('self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        Assign(
                            [
                                Attribute(
                                    Name('self', Load()),
                                    'vt',
                                    Store())],
                            List([], Load())),
                        Assign(
                            [
                                Name('cv_pair', Store())],
                            Call(
                                Name('re_match', Load()),
                                [
                                    Name('self', Load())],
                                [])),
                        Expr(
                            Call(
                                Attribute(
                                    Attribute(
                                        Name('self', Load()),
                                        'vt',
                                        Load()),
                                    'append',
                                    Load()),
                                [
                                    Tuple(
                                        [
                                            Subscript(
                                                Name('cv_pair', Load()),
                                                Constant(0),
                                                Load()),
                                            Subscript(
                                                Name('cv_pair', Load()),
                                                Constant(1),
                                                Load()),
                                            Constant(False)],
                                        Load())],
                                [])),
                        Return()],
                    [],
                    type_params=[]),
                FunctionDef(
                    'checkCompatibility',
                    arguments(
                        [],
                        [
                            arg('left'),
                            arg('right')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        For(
                            Name('x', Store()),
                            Attribute(
                                Name('left', Load()),
                                'vt',
                                Load()),
                            [
                                If(
                                    Subscript(
                                        Name('x', Load()),
                                        Constant(2),
                                        Load()),
                                    [
                                        Expr(
                                            Call(
                                                Name('print', Load()),
                                                [
                                                    Constant('debug')],
                                                [])),
                                        Assign(
                                            [
                                                Name('c', Store())],
                                            Subscript(
                                                Name('x', Load()),
                                                Constant(0),
                                                Load())),
                                        Assign(
                                            [
                                                Name('v', Store())],
                                            Subscript(
                                                Name('x', Load()),
                                                Constant(1),
                                                Load())),
                                        For(
                                            Name('y', Store()),
                                            Attribute(
                                                Name('right', Load()),
                                                'vt',
                                                Load()),
                                            [
                                                If(
                                                    BoolOp(
                                                        And(),
                                                        [
                                                            Compare(
                                                                Subscript(
                                                                    Name('y', Load()),
                                                                    Constant(0),
                                                                    Load()),
                                                                [
                                                                    Eq()],
                                                                [
                                                                    Name('c', Load())]),
                                                            Compare(
                                                                Subscript(
                                                                    Name('y', Load()),
                                                                    Constant(1),
                                                                    Load()),
                                                                [
                                                                    NotEq()],
                                                                [
                                                                    Name('v', Load())])]),
                                                    [
                                                        Raise(
                                                            Call(
                                                                Name('TypeError', Load()),
                                                                [
                                                                    JoinedStr(
                                                                        [
                                                                            Constant('Inconsistent Version Usage:\nComparing '),
                                                                            FormattedValue(
                                                                                Name('c', Load()),
                                                                                -1),
                                                                            Constant('!'),
                                                                            FormattedValue(
                                                                                Name('v', Load()),
                                                                                -1),
                                                                            Constant(' and '),
                                                                            FormattedValue(
                                                                                Name('c', Load()),
                                                                                -1),
                                                                            Constant('!'),
                                                                            FormattedValue(
                                                                                Subscript(
                                                                                    Name('y', Load()),
                                                                                    Constant(1),
                                                                                    Load()),
                                                                                -1),
                                                                            Constant(' values')])],
                                                                []))],
                                                    [])],
                                            [])],
                                    [])],
                            []),
                        For(
                            Name('y', Store()),
                            Attribute(
                                Name('right', Load()),
                                'vt',
                                Load()),
                            [
                                If(
                                    Subscript(
                                        Name('y', Load()),
                                        Constant(2),
                                        Load()),
                                    [
                                        Assign(
                                            [
                                                Name('c', Store())],
                                            Subscript(
                                                Name('y', Load()),
                                                Constant(0),
                                                Load())),
                                        Assign(
                                            [
                                                Name('v', Store())],
                                            Subscript(
                                                Name('y', Load()),
                                                Constant(1),
                                                Load())),
                                        For(
                                            Name('x', Store()),
                                            Attribute(
                                                Name('left', Load()),
                                                'vt',
                                                Load()),
                                            [
                                                If(
                                                    BinOp(
                                                        Compare(
                                                            Subscript(
                                                                Name('x', Load()),
                                                                Constant(0),
                                                                Load()),
                                                            [
                                                                Eq()],
                                                            [
                                                                Name('c', Load())]),
                                                        BitAnd(),
                                                        Compare(
                                                            Subscript(
                                                                Name('x', Load()),
                                                                Constant(1),
                                                                Load()),
                                                            [
                                                                NotEq()],
                                                            [
                                                                Name('v', Load())])),
                                                    [
                                                        Raise(
                                                            Call(
                                                                Name('TypeError', Load()),
                                                                [
                                                                    JoinedStr(
                                                                        [
                                                                            Constant('Inconsistent Version Usage:\nComparing '),
                                                                            FormattedValue(
                                                                                Name('c', Load()),
                                                                                -1),
                                                                            Constant('!'),
                                                                            FormattedValue(
                                                                                Subscript(
                                                                                    Name('x', Load()),
                                                                                    Constant(1),
                                                                                    Load()),
                                                                                -1),
                                                                            Constant(' and '),
                                                                            FormattedValue(
                                                                                Name('c', Load()),
                                                                                -1),
                                                                            Constant('!'),
                                                                            FormattedValue(
                                                                                Name('v', Load()),
                                                                                -1),
                                                                            Constant(' values')])],
                                                                []))],
                                                    [])],
                                            [])],
                                    [])],
                            []),
                        Return()],
                    [],
                    type_params=[]),
                FunctionDef(
                    'is_include',
                    arguments(
                        [],
                        [
                            arg('left'),
                            arg('c'),
                            arg('v'),
                            arg('b')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        For(
                            Name('x', Store()),
                            Name('left', Load()),
                            [
                                If(
                                    BinOp(
                                        BinOp(
                                            Compare(
                                                Subscript(
                                                    Name('x', Load()),
                                                    Constant(0),
                                                    Load()),
                                                [
                                                    Eq()],
                                                [
                                                    Name('c', Load())]),
                                            BitAnd(),
                                            Compare(
                                                Subscript(
                                                    Name('x', Load()),
                                                    Constant(1),
                                                    Load()),
                                                [
                                                    Eq()],
                                                [
                                                    Name('v', Load())])),
                                        BitAnd(),
                                        Compare(
                                            Subscript(
                                                Name('x', Load()),
                                                Constant(2),
                                                Load()),
                                            [
                                                Eq()],
                                            [
                                                Name('b', Load())])),
                                    [
                                        Return(
                                            Constant(True))],
                                    [])],
                            []),
                        Return(
                            Constant(False))],
                    [],
                    type_params=[]),
                FunctionDef(
                    'insert',
                    arguments(
                        [],
                        [
                            arg('value'),
                            arg('c'),
                            arg('v'),
                            arg('b')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        For(
                            Name('x', Store()),
                            Attribute(
                                Name('value', Load()),
                                'vt',
                                Load()),
                            [
                                If(
                                    BoolOp(
                                        And(),
                                        [
                                            Compare(
                                                Subscript(
                                                    Name('x', Load()),
                                                    Constant(0),
                                                    Load()),
                                                [
                                                    Eq()],
                                                [
                                                    Name('c', Load())]),
                                            Compare(
                                                Subscript(
                                                    Name('x', Load()),
                                                    Constant(1),
                                                    Load()),
                                                [
                                                    Eq()],
                                                [
                                                    Name('v', Load())])]),
                                    [
                                        Expr(
                                            Call(
                                                Attribute(
                                                    Attribute(
                                                        Name('value', Load()),
                                                        'vt',
                                                        Load()),
                                                    'remove',
                                                    Load()),
                                                [
                                                    Name('x', Load())],
                                                []))],
                                    []),
                                Expr(
                                    Call(
                                        Attribute(
                                            Attribute(
                                                Name('value', Load()),
                                                'vt',
                                                Load()),
                                            'append',
                                            Load()),
                                        [
                                            Tuple(
                                                [
                                                    Name('c', Load()),
                                                    Name('v', Load()),
                                                    Name('b', Load())],
                                                Load())],
                                        []))],
                            []),
                        Return()],
                    [],
                    type_params=[]),
                FunctionDef(
                    'append',
                    arguments(
                        [],
                        [
                            arg('left'),
                            arg('right')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        Expr(
                            Attribute(
                                Name('left', Load()),
                                'vt',
                                Load())),
                        Expr(
                            Attribute(
                                Name('right', Load()),
                                'vt',
                                Load())),
                        For(
                            Name('x', Store()),
                            Attribute(
                                Name('left', Load()),
                                'vt',
                                Load()),
                            [
                                Assign(
                                    [
                                        Name('cx', Store())],
                                    Subscript(
                                        Name('x', Load()),
                                        Constant(0),
                                        Load())),
                                Assign(
                                    [
                                        Name('vx', Store())],
                                    Subscript(
                                        Name('x', Load()),
                                        Constant(1),
                                        Load())),
                                Assign(
                                    [
                                        Name('bx', Store())],
                                    Subscript(
                                        Name('x', Load()),
                                        Constant(2),
                                        Load())),
                                If(
                                    Call(
                                        Name('is_include', Load()),
                                        [
                                            Attribute(
                                                Name('right', Load()),
                                                'vt',
                                                Load()),
                                            Name('cx', Load()),
                                            Name('vx', Load()),
                                            Name('bx', Load())],
                                        []),
                                    [
                                        Expr(
                                            Call(
                                                Attribute(
                                                    Attribute(
                                                        Name('left', Load()),
                                                        'vt',
                                                        Load()),
                                                    'remove',
                                                    Load()),
                                                [
                                                    Name('x', Load())],
                                                []))],
                                    [])],
                            []),
                        For(
                            Name('y', Store()),
                            Attribute(
                                Name('right', Load()),
                                'vt',
                                Load()),
                            [
                                Expr(
                                    Call(
                                        Attribute(
                                            Attribute(
                                                Name('left', Load()),
                                                'vt',
                                                Load()),
                                            'append',
                                            Load()),
                                        [
                                            Name('y', Load())],
                                        []))],
                            []),
                        Return()],
                    [],
                    type_params=[]),
                FunctionDef(
                    'incompat',
                    arguments(
                        [],
                        [
                            arg('self'),
                            arg('value')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        Assign(
                            [
                                Name('cv_pair', Store())],
                            Call(
                                Name('re_match', Load()),
                                [
                                    Name('self', Load())],
                                [])),
                        Expr(
                            Call(
                                Name('insert', Load()),
                                [
                                    Name('value', Load()),
                                    Subscript(
                                        Name('cv_pair', Load()),
                                        Constant(0),
                                        Load()),
                                    Subscript(
                                        Name('cv_pair', Load()),
                                        Constant(1),
                                        Load()),
                                    Constant(True)],
                                [])),
                        Return()],
                    [],
                    type_params=[])],
            []),
        Module(
            [
                ClassDef(
                    'Primitive_Bool_v_0',
                    [],
                    [],
                    [
                        FunctionDef(
                            '__init__',
                            arguments(
                                [],
                                [
                                    arg('self'),
                                    arg('value')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Assign(
                                    [
                                        Attribute(
                                            Name('self', Load()),
                                            'value',
                                            Store())],
                                    Name('value', Load())),
                                Expr(
                                    Call(
                                        Name('__vt_init__', Load()),
                                        [
                                            Name('self', Load())],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__repr__',
                            arguments(
                                [],
                                [
                                    arg('self')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    JoinedStr(
                                        [
                                            FormattedValue(
                                                Attribute(
                                                    Name('self', Load()),
                                                    'value',
                                                    Load()),
                                                -1)]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'equal',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Compare(
                                        Attribute(
                                            Name('left', Load()),
                                            'value',
                                            Load()),
                                        [
                                            Eq()],
                                        [
                                            Attribute(
                                                Name('right', Load()),
                                                'value',
                                                Load())]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'nequal',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Compare(
                                        Attribute(
                                            Name('left', Load()),
                                            'value',
                                            Load()),
                                        [
                                            NotEq()],
                                        [
                                            Attribute(
                                                Name('right', Load()),
                                                'value',
                                                Load())]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__eq__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('eq')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__ne__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('ne')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__and__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('and')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__or__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('or')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'binary',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right'),
                                    arg('op')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Expr(
                                    Call(
                                        Name('checkCompatibility', Load()),
                                        [
                                            Name('left', Load()),
                                            Name('right', Load())],
                                        [])),
                                Match(
                                    Name('op', Load()),
                                    [
                                        match_case(
                                            MatchValue(
                                                Constant('and')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                BitAnd(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('or')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                BitOr(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('eq')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    Eq()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('ne')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    NotEq()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))])]),
                                Expr(
                                    Call(
                                        Name('append', Load()),
                                        [
                                            Name('result', Load()),
                                            Name('left', Load())],
                                        [])),
                                Expr(
                                    Call(
                                        Name('append', Load()),
                                        [
                                            Name('result', Load()),
                                            Name('right', Load())],
                                        [])),
                                Return(
                                    Name('result', Load()))],
                            [],
                            type_params=[])],
                    [],
                    [])],
            []),
        Module(
            [
                ClassDef(
                    'Primitive_Number_v_0',
                    [],
                    [],
                    [
                        FunctionDef(
                            '__init__',
                            arguments(
                                [],
                                [
                                    arg('self'),
                                    arg('value')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Assign(
                                    [
                                        Attribute(
                                            Name('self', Load()),
                                            'value',
                                            Store())],
                                    Name('value', Load())),
                                Expr(
                                    Call(
                                        Name('__vt_init__', Load()),
                                        [
                                            Name('self', Load())],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__repr__',
                            arguments(
                                [],
                                [
                                    arg('self')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    JoinedStr(
                                        [
                                            FormattedValue(
                                                Attribute(
                                                    Name('self', Load()),
                                                    'value',
                                                    Load()),
                                                -1)]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'equal',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Compare(
                                        Attribute(
                                            Name('left', Load()),
                                            'value',
                                            Load()),
                                        [
                                            Eq()],
                                        [
                                            Attribute(
                                                Name('right', Load()),
                                                'value',
                                                Load())]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'nequal',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Compare(
                                        Attribute(
                                            Name('left', Load()),
                                            'value',
                                            Load()),
                                        [
                                            NotEq()],
                                        [
                                            Attribute(
                                                Name('right', Load()),
                                                'value',
                                                Load())]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__add__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('add')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__sub__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('sub')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__mul__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('mul')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__div__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('div')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__floordiv__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('floordiv')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__mod__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('mod')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__eq__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('eq')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__ne__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('ne')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__lt__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('lt')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__gt__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('gt')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__le__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('le')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__ge__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('ge')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__and__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('and')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__or__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('or')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'binary',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right'),
                                    arg('op')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Expr(
                                    Call(
                                        Name('checkCompatibility', Load()),
                                        [
                                            Name('left', Load()),
                                            Name('right', Load())],
                                        [])),
                                Match(
                                    Name('op', Load()),
                                    [
                                        match_case(
                                            MatchValue(
                                                Constant('add')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Number_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                Add(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('sub')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Number_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                Sub(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('mul')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Number_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                Mult(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('div')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Number_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                Div(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('mod')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Number_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                Mod(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('floordiv')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Number_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                FloorDiv(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('and')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                BitAnd(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('or')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                BitOr(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('eq')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    Eq()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('ne')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    NotEq()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('lt')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    Lt()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('gt')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    Gt()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('le')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    LtE()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('ge')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    GtE()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))])]),
                                Expr(
                                    Call(
                                        Name('append', Load()),
                                        [
                                            Name('result', Load()),
                                            Name('left', Load())],
                                        [])),
                                Expr(
                                    Call(
                                        Name('append', Load()),
                                        [
                                            Name('result', Load()),
                                            Name('right', Load())],
                                        [])),
                                Return(
                                    Name('result', Load()))],
                            [],
                            type_params=[])],
                    [],
                    [])],
            []),
        Module(
            [
                ClassDef(
                    'Primitive_String_v_0',
                    [],
                    [],
                    [
                        FunctionDef(
                            '__init__',
                            arguments(
                                [],
                                [
                                    arg('self'),
                                    arg('value')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Assign(
                                    [
                                        Attribute(
                                            Name('self', Load()),
                                            'value',
                                            Store())],
                                    Name('value', Load())),
                                Expr(
                                    Call(
                                        Name('__vt_init__', Load()),
                                        [
                                            Name('self', Load())],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__repr__',
                            arguments(
                                [],
                                [
                                    arg('self')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    JoinedStr(
                                        [
                                            FormattedValue(
                                                Attribute(
                                                    Name('self', Load()),
                                                    'value',
                                                    Load()),
                                                -1)]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'equal',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Compare(
                                        Attribute(
                                            Name('left', Load()),
                                            'value',
                                            Load()),
                                        [
                                            Eq()],
                                        [
                                            Attribute(
                                                Name('right', Load()),
                                                'value',
                                                Load())]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'nequal',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Compare(
                                        Attribute(
                                            Name('left', Load()),
                                            'value',
                                            Load()),
                                        [
                                            NotEq()],
                                        [
                                            Attribute(
                                                Name('right', Load()),
                                                'value',
                                                Load())]))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__add__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('add')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__eq__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('eq')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__ne__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('ne')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__lt__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('lt')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__gt__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('gt')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__le__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('le')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__ge__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('ge')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__and__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('and')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            '__or__',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Return(
                                    Call(
                                        Attribute(
                                            Name('left', Load()),
                                            'binary',
                                            Load()),
                                        [
                                            Name('right', Load()),
                                            Constant('or')],
                                        []))],
                            [],
                            type_params=[]),
                        FunctionDef(
                            'binary',
                            arguments(
                                [],
                                [
                                    arg('left'),
                                    arg('right'),
                                    arg('op')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            [
                                Expr(
                                    Call(
                                        Name('checkCompatibility', Load()),
                                        [
                                            Name('left', Load()),
                                            Name('right', Load())],
                                        [])),
                                Match(
                                    Name('op', Load()),
                                    [
                                        match_case(
                                            MatchValue(
                                                Constant('add')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_String_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                Add(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('and')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                BitAnd(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('or')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            BinOp(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                BitOr(),
                                                                Attribute(
                                                                    Name('right', Load()),
                                                                    'value',
                                                                    Load()))],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('eq')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    Eq()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('ne')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    NotEq()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('lt')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    Lt()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('gt')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    Gt()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('le')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    LtE()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))]),
                                        match_case(
                                            MatchValue(
                                                Constant('ge')),
                                            body=[
                                                Assign(
                                                    [
                                                        Name('result', Store())],
                                                    Call(
                                                        Name('Primitive_Bool_v_0', Load()),
                                                        [
                                                            Compare(
                                                                Attribute(
                                                                    Name('left', Load()),
                                                                    'value',
                                                                    Load()),
                                                                [
                                                                    GtE()],
                                                                [
                                                                    Attribute(
                                                                        Name('right', Load()),
                                                                        'value',
                                                                        Load())])],
                                                        []))])]),
                                Expr(
                                    Call(
                                        Name('append', Load()),
                                        [
                                            Name('result', Load()),
                                            Name('left', Load())],
                                        [])),
                                Expr(
                                    Call(
                                        Name('append', Load()),
                                        [
                                            Name('result', Load()),
                                            Name('right', Load())],
                                        [])),
                                Return(
                                    Name('result', Load()))],
                            [],
                            type_params=[])],
                    [],
                    [])],
            []),
        ClassDef(
            'A_v_1',
            [],
            [],
            [
                FunctionDef(
                    '__init__',
                    arguments(
                        [],
                        [
                            arg('self'),
                            arg('value')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        Assign(
                            [
                                Attribute(
                                    Name('self', Load()),
                                    'value')],
                            Name('value', Load())),
                        [
                            Expr(
                                Call(
                                    Name('__vt_init__', Load()),
                                    [
                                        Name('self', Load())],
                                    []))]],
                    [],
                    type_params=[])],
            [],
            []),
        ClassDef(
            'A_v_2',
            [],
            [],
            [
                FunctionDef(
                    '__init__',
                    arguments(
                        [],
                        [
                            arg('self'),
                            arg('value')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    [
                        Assign(
                            [
                                Attribute(
                                    Name('self', Load()),
                                    'value')],
                            Name('value', Load())),
                        [
                            Expr(
                                Call(
                                    Name('__vt_init__', Load()),
                                    [
                                        Name('self', Load())],
                                    []))]],
                    [],
                    type_params=[])],
            [],
            []),
        Assign(
            [
                Name('a1', Load())],
            Call(
                Name('A_v_1', Load()),
                [
                    Call(
                        Name('Primitive_Number_v_0', Load()),
                        [
                            Constant(1.0)],
                        [])],
                [])),
        Assign(
            [
                Name('a2', Load())],
            Call(
                Name('A_v_2', Load()),
                [
                    Call(
                        Name('Primitive_Number_v_0', Load()),
                        [
                            Constant(3.0)],
                        [])],
                [])),
        Expr(
            Call(
                Name('print', Load()),
                [
                    Call(
                        Name('Primitive_String_v_0', Load()),
                        [
                            Constant('"hi"')],
                        [])],
                [])),
        Expr(
            Call(
                Name('print', Load()),
                [
                    BinOp(
                        Attribute(
                            Name('a1', Load()),
                            'value'),
                        Add(),
                        Attribute(
                            Name('a2', Load()),
                            'value'))],
                []))],
    [])
